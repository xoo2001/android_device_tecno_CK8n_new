<?xml version='1.0' encoding='UTF-8'?>
<!--
  Copyright (C) 2025 The LineageOS Project

  SPDX-License-Identifier: Apache-2.0
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate.

     NOTE: The naming convention is "config_camelCaseValue". Some legacy
     entries do not follow the convention, but all new entries should. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

	<!-- Array of output values for LCD backlight corresponding to the lux values
		in the config_autoBrightnessLevels array.  This array should have size one greater
		than the size of the config_autoBrightnessLevels array.
		The brightness values must be between 0 and 255 and be non-decreasing.
		This must be overridden in platform specific overlays -->
	<integer-array name="config_autoBrightnessLcdBacklightValues">
		<item>8</item>
		<item>64</item>
		<item>98</item>
		<item>104</item>
		<item>110</item>
		<item>116</item>
		<item>122</item>
		<item>128</item>
		<item>134</item>
		<item>182</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
		<item>255</item>
	</integer-array>

	<!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
		The N entries of this array define N + 1 control points as follows:
		(1-based arrays)

		Point 1:            (0, value[1]):             lux <= 0
		Point 2:     (level[1], value[2]):  0        < lux <= level[1]
		Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
		...
		Point N+1: (level[N], value[N+1]):  level[N] < lux

		The control points must be strictly increasing.  Each control point
		corresponds to an entry in the brightness backlight values arrays.
		For example, if lux == level[1] (first element of the levels array)
		then the brightness will be determined by value[2] (second element
		of the brightness values array).

		Spline interpolation is used to determine the auto-brightness
		backlight values for lux levels between these control points.

		Must be overridden in platform specific overlays -->
	<integer-array name="config_autoBrightnessLevels">
		<item>6</item>
		<item>18</item>
		<item>34</item>
		<item>82</item>
		<item>128</item>
		<item>256</item>
		<item>384</item>
		<item>512</item>
		<item>640</item>
		<item>768</item>
		<item>896</item>
		<item>1536</item>
		<item>2560</item>
		<item>3584</item>
		<item>4608</item>
		<item>5632</item>
		<item>7168</item>
		<item>8192</item>
		<item>8704</item>
	</integer-array>

	<!-- Array of desired screen brightness in nits corresponding to the lux values
		in the config_autoBrightnessLevels array. The display brightness is defined as the measured
		brightness of an all-white image.

		If this is defined then:
			- config_autoBrightnessLcdBacklightValues should not be defined
			- config_screenBrightnessNits must be defined
			- config_screenBrightnessBacklight must be defined

		This array should have size one greater than the size of the config_autoBrightnessLevels
		array. The brightness values must be non-negative and non-decreasing. This must be
		overridden in platform specific overlays -->
	<array name="config_autoBrightnessDisplayValuesNits">
		<item>4.522</item>
		<item>20.246</item>
		<item>55.509</item>
		<item>74.653</item>
		<item>82.757</item>
		<item>93.15</item>
		<item>117.678</item>
		<item>138.666</item>
		<item>164.847</item>
		<item>189.157</item>
		<item>207.656</item>
		<item>221.191</item>
		<item>277.164</item>
		<item>350.798</item>
		<item>391.524</item>
		<item>414.81</item>
		<item>434.151</item>
		<item>455.291</item>
		<item>490.922</item>
		<item>500</item>
	</array>

	<!-- An array describing the screen's backlight values corresponding to the brightness
		values in the config_screenBrightnessNits array.
		This array should be equal in size to config_screenBrightnessBacklight. -->
	<array name="config_screenBrightnessBacklight">
		<item>1</item>
		<item>15</item>
		<item>30</item>
		<item>45</item>
		<item>60</item>
		<item>75</item>
		<item>90</item>
		<item>105</item>
		<item>120</item>
		<item>135</item>
		<item>150</item>
		<item>165</item>
		<item>180</item>
		<item>195</item>
		<item>210</item>
		<item>225</item>
		<item>240</item>
		<item>255</item>
	</array>

	<!-- An array of floats describing the screen brightness in nits corresponding to the backlight
		values in the config_screenBrightnessBacklight array.  On OLED displays these  values
		should be measured with an all white image while the display is in the fully on state.
		Note that this value should *not* reflect the maximum brightness value for any high
		brightness modes but only the maximum brightness value obtainable in a sustainable manner.

		This array should be equal in size to config_screenBrightnessBacklight -->
	<array name="config_screenBrightnessNits">
		<item>4.5225</item>
		<item>28.774</item>
		<item>59.5664</item>
		<item>90.9751</item>
		<item>121.6867</item>
		<item>152.9367</item>
		<item>182.8808</item>
		<item>213.4835</item>
		<item>243.1358</item>
		<item>273.4988</item>
		<item>302.6976</item>
		<item>331.7876</item>
		<item>360.5147</item>
		<item>389.5766</item>
		<item>418.1237</item>
		<item>445.7833</item>
		<item>473.2181</item>
		<item>500</item>
	</array>

	<!-- Default screen brightness setting set.
		-2 is invalid so setting will resort to int value specified above.
		Must be in the range specified by minimum and maximum. -->
	<item name="config_screenBrightnessSettingDefaultFloat" format="float" type="dimen">0.4</item>

	<!-- Maximum screen brightness allowed by the power manager.
		-2 is invalid so setting will resort to int value specified above.
		Set this to 1.0 for maximum brightness range.
		The user is forbidden from setting the brightness above this level. -->
	<item name="config_screenBrightnessSettingMaximumFloat" format="float" type="dimen">1</item>

	<!-- Minimum screen brightness setting allowed by power manager.
		-2 is invalid so setting will resort to int value specified above.
		Set this to 0.0 to allow screen to go to minimal brightness.
		The user is forbidden from setting the brightness below this level. -->
	<item name="config_screenBrightnessSettingMinimumFloat" format="float" type="dimen">0.001960785</item>

	<!-- Screen brightness used to dim the screen while dozing in a very low power state.
		May be less than the minimum allowed brightness setting
		that can be set by the user. -->
	<integer name="config_screenBrightnessDoze">5</integer>

	<!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
		for debouncing the light sensor.  Different constants are used to debounce the light sensor
		when adapting to brighter or darker environments.  This parameter controls how quickly
		brightness changes occur in response to an observed change in light level that exceeds the
		hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">3000</integer>

	<!-- If true, the doze component is not started until after the screen has been
		turned off and the screen off animation has been performed. -->
	<bool name="config_dozeAfterScreenOffByDefault">true</bool>

	<!-- Enables or disables haptic effect when the text insertion/selection handle is moved
		manually by the user. Off by default, since the expected haptic feedback may not be
		available on some devices. -->
	<bool name="config_enableHapticTextHandle">true</bool>

	<!-- ComponentName of a dream to show whenever the system would otherwise have gone to sleep. -->
	<string translatable="false" name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

	<!-- Enable doze alwaysOn Display -->
	<bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

	<!-- Control whether the always on display mode is enabled by default. This value will be used
		during initialization when the setting is still null. -->
	<bool name="config_dozeAlwaysOnEnabled">false</bool>

	<!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
	<bool name="config_dozePulsePickup">true</bool>

	<!-- True if the display hardware only has brightness buckets rather than a full range of
		backlight values -->
	<bool name="config_displayBrightnessBucketsInDoze">true</bool>

	<!-- If true, the display will be shifted around in ambient mode. -->
	<bool name="config_enableBurnInProtection">true</bool>

	<!-- Power Management: Specifies whether to decouple the auto-suspend state of the
		device from the display on/off state.
		When false, autosuspend_disable() will be called before the display is turned on
		and autosuspend_enable() will be called after the display is turned off.
		This mode provides best compatibility for devices using legacy power management
		features such as early suspend / late resume.
		When true, autosuspend_display() and autosuspend_enable() will be called
		independently of whether the display is being turned on or off.  This mode
		enables the power manager to suspend the application processor while the
		display is on.
		This resource should be set to "true" when a doze component has been specified
		to maximize power savings but not all devices support it.
		Refer to autosuspend.h for details.
	-->
	<bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

	<!-- Power Management: Specifies whether to decouple the interactive state of the
		device from the display on/off state.
		When false, setInteractive(..., true) will be called before the display is turned on
		and setInteractive(..., false) will be called after the display is turned off.
		This mode provides best compatibility for devices that expect the interactive
		state to be tied to the display state.
		When true, setInteractive(...) will be called independently of whether the display
		is being turned on or off.  This mode enables the power manager to reduce
		clocks and disable the touch controller while the display is on.
		This resource should be set to "true" when a doze component has been specified
		to maximize power savings but not all devices support it.
		Refer to power.h for details.
	-->
	<bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

	<!-- Indicate whether to allow the device to suspend when the screen is off
		due to the proximity sensor.  This resource should only be set to true
		if the sensor HAL correctly handles the proximity sensor as a wake-up source.
		Otherwise, the device may fail to wake out of suspend reliably.
		The default is false. -->
	<bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

	<!-- The default peak refresh rate for a given device. Change this value if you want to prevent
		the framework from using higher refresh rates, even if display modes with higher refresh
		rates are available from hardware composer. Only has an effect if the value is
		non-zero. -->
	<integer name="config_defaultPeakRefreshRate">120</integer>

	<!-- The default refresh rate for a given device. Change this value to set a higher default
		refresh rate. If the hardware composer on the device supports display modes with a higher
		refresh rate than the default value specified here, the framework may use those higher
		refresh rate modes if an app chooses one by setting preferredDisplayModeId or calling
		setFrameRate().
		If a non-zero value is set for config_defaultPeakRefreshRate, then
		config_defaultRefreshRate may be set to 0, in which case the value set for
		config_defaultPeakRefreshRate will act as the default frame rate. -->
	<integer name="config_defaultRefreshRate">0</integer>

	<!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
        autodetected from the Configuration. -->
	<bool name="config_showNavigationBar">true</bool>

	<!-- The bounding path of the cutout region of the main built-in display.
		Must either be empty if there is no cutout region, or a string that is parsable by
		{@link android.util.PathParser}.

		The path is assumed to be specified in display coordinates with pixel units and in
		the display's native orientation, with the origin of the coordinate system at the
		center top of the display. Optionally, you can append either `@left` or `@right` to the
		end of the path string, in order to change the path origin to either the top left,
		or top right of the display.

		To facilitate writing device-independent emulation overlays, the marker `@dp` can be
		appended after the path string to interpret coordinates in dp instead of px units.
		Note that a physical cutout should be configured in pixels for the best results.

		If the display supports multiple resolutions, please define the path config based on the
		highest resolution so that it can be scaled correctly in each resolution.

		Example for a 10px x 10px square top-center cutout:
				<string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
		Example for a 10dp x 10dp square top-center cutout:
				<string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>

		@see https://www.w3.org/TR/SVG/paths.html#PathData
	-->
	<string translatable="false" name="config_mainBuiltInDisplayCutout">M -24,0 L -24,36 L 24,36 L 24,0 Z</string>

	<!-- Whether device supports double tap to wake -->
	<bool name="config_supportDoubleTapWake">true</bool>

	<!-- Whether this device is supporting the camera toggle -->
	<bool name="config_supportsCamToggle">true</bool>

	<!-- Whether this device is supporting the software microphone toggle -->
	<bool name="config_supportsMicToggle">true</bool>

	<!-- Whether UI for multi user should be shown -->
	<bool name="config_enableMultiUserUI">true</bool>

	<!-- When true use the linux /dev/input/event subsystem to detect the switch changes
		on the headphone/microphone jack. When false use the older uevent framework. -->
	<bool name="config_useDevInputEventForAudioJack">true</bool>

	<!-- Default list of files pinned by the Pinner Service -->
	<string-array translatable="false" name="config_defaultPinnerServiceFiles">
		<item>"/system/framework/framework.jar"</item>
		<item>"/system/framework/services.jar"</item>
		<item>"/apex/com.android.art/javalib/core-oj.jar"</item>
		<item>"/apex/com.android.art/javalib/core-libart.jar"</item>
		<item>"/system_ext/priv-app/SystemUI/SystemUI.apk"</item>
		<item>"/system/bin/surfaceflinger"</item>
	</string-array>

	<!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
	<bool name="config_unplugTurnsOnScreen">true</bool>

	<!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
		is not necessarily the same as the number of phones/logical modems supported by the device.
		For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
		or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
		and one pSIM) -->
	<integer name="config_num_physical_slots">2</integer>

	<!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
	<bool name="config_cellBroadcastAppLinks">true</bool>

	<!-- Whether the device enable the standalone (SA) mode of 5G NR.-->
	<bool name="config_telephony5gStandalone">true</bool>

	<!-- Whether the device enable the non-standalone (NSA) mode of 5G NR.-->
	<bool name="config_telephony5gNonStandalone">true</bool>

	<!-- Is the device capable of hot swapping an UICC Card -->
	<bool name="config_hotswapCapable">true</bool>

	<!-- Whether WiFi display is supported by this device.
		There are many prerequisites for this feature to work correctly.
		Here are a few of them:
		* The WiFi radio must support WiFi P2P.
		* The WiFi radio must support concurrent connections to the WiFi display and
			to an access point.
		* The Audio Server audio_policy_configuration.xml file must specify a rule for
			the "r_submix" remote submix module.  This module is used to record and stream system
			audio output to the WiFi display encoder in the media server.
		* The remote submix module "audio.r_submix.default" must be installed on the device.
		* The device must be provisioned with HDCP keys (for protected content).
	-->
	<bool name="config_enableWifiDisplay">true</bool>

	<!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
		when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
		where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
		and Strength as defined in Authenticators.java -->
	<string-array name="config_biometric_sensors">
		<item>0:2:15</item>
	</string-array>
</resources>
